{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class SignupUpPageComponent {\n  constructor(formBuilder, http, router) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.signUpForm = this.formBuilder.group({\n      email: [\"\"],\n      password: [\"\"]\n    });\n  }\n  signUp() {\n    this.http.post(\"http://localhost:3000/signupUsersList\", this.signUpForm.value).subscribe(res => {\n      alert('SIGNIN SUCCESFUL');\n      this.signUpForm.reset();\n      this.router.navigate([\"login\"]);\n    }, err => {\n      alert(\"Something went wrong\");\n    });\n  }\n}\nSignupUpPageComponent.ɵfac = function SignupUpPageComponent_Factory(t) {\n  return new (t || SignupUpPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSignupUpPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupUpPageComponent,\n  selectors: [[\"app-signup-up-page\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [\"formControlName\", \"email\", \"type\", \"email\", \"required\", \"\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"type\", \"password\"], [\"routerLink\", \"/login\"]],\n  template: function SignupUpPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2, \"Hello Welcome \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"h3\");\n      i0.ɵɵtext(4, \"Create An Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function SignupUpPageComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.signUp();\n      });\n      i0.ɵɵelementStart(6, \"div\")(7, \"label\", 1);\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 2);\n      i0.ɵɵelementStart(10, \"label\", 3);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\");\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"span\");\n      i0.ɵɵtext(16, \"Already have an account? \");\n      i0.ɵɵelementStart(17, \"a\", 5);\n      i0.ɵɵtext(18, \"signUp\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n    }\n  },\n  dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,qBAAqB;EAGhCC,YAAoBC,WAAwB,EAAUC,IAAgB,EAAUC,MAAc;IAA1E,gBAAW,GAAXF,WAAW;IAAuB,SAAI,GAAJC,IAAI;IAAsB,WAAM,GAANC,MAAM;EAAY;EAElGC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACvCC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC;EACJ;EAEAC,MAAM;IACJ,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,uCAAuC,EAAC,IAAI,CAACL,UAAU,CAACM,KAAK,CAAC,CACjFC,SAAS,CAACC,GAAG,IAAE;MACdC,KAAK,CAAC,kBAAkB,CAAC;MACzB,IAAI,CAACT,UAAU,CAACU,KAAK,EAAE;MACvB,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,EAACC,GAAG,IAAE;MACLH,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CAAC;EACJ;;AArBWf,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXlCC,2BAAK;MACGA,8BAAc;MAAAA,iBAAK;MACtBA,0BAAI;MAAAA,iCAAiB;MAAAA,iBAAK;MACxBA,+BAAqD;MAAtBA;QAAA,OAAYC,YAAQ;MAAA,EAAC;MAClDD,2BAAK;MACgBA,qBAAK;MAAAA,iBAAQ;MAChCA,2BAAuD;MACvDA,iCAAsB;MAAAA,yBAAQ;MAAAA,iBAAQ;MACtCA,4BAAmD;MACrDA,iBAAM;MACNA,+BAAQ;MAAAA,uBAAM;MAAAA,iBAAS;MACvBA,6BAAM;MAAAA,0CACN;MAAAA,6BAAuB;MAAAA,uBAAM;MAAAA,iBAAI;;;MAT7BA,eAAwB;MAAxBA,0CAAwB","names":["SignupUpPageComponent","constructor","formBuilder","http","router","ngOnInit","signUpForm","group","email","password","signUp","post","value","subscribe","res","alert","reset","navigate","err","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["E:\\SADP\\frontend_app\\angular-15-crud-example\\src\\app\\components\\signup-up-page\\signup-up-page.component.ts","E:\\SADP\\frontend_app\\angular-15-crud-example\\src\\app\\components\\signup-up-page\\signup-up-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-signup-up-page',\n  templateUrl: './signup-up-page.component.html',\n  styleUrls: ['./signup-up-page.component.css']\n})\nexport class SignupUpPageComponent {\n\n  public signUpForm !: FormGroup\n  constructor(private formBuilder: FormBuilder, private http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n    this.signUpForm = this.formBuilder.group({\n      email: [\"\"],\n      password: [\"\"]\n    })\n  }\n\n  signUp(){\n    this.http.post<any>(\"http://localhost:3000/signupUsersList\",this.signUpForm.value)\n    .subscribe(res=>{\n      alert('SIGNIN SUCCESFUL');\n      this.signUpForm.reset()\n      this.router.navigate([\"login\"])\n    },err=>{\n      alert(\"Something went wrong\")\n    })\n  }\n\n}\n","<div>\n    <h1>Hello Welcome </h1>\n     <h3>Create An Account</h3>\n       <form [formGroup]=\"signUpForm\" (ngSubmit)=\"signUp()\">\n         <div>\n           <label for=\"email\">Email</label>\n           <input formControlName=\"email\"  type=\"email\"  required>\n           <label for=\"password\">Password</label>\n           <input formControlName=\"password\"  type=\"password\">\n         </div>\n         <button>Submit</button>\n         <span>Already have an account? \n         <a routerLink=\"/login\">signUp</a></span>\n       </form>\n   </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}